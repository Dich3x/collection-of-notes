/*СВОЙСТВО display

display: значение; //свойство display создаёт внтрунний и внешний типы отображения элемента



//БАЗОВЫЕ КОНТЕЙНЕРЫ

display: block; //элемент создаёт настраивамый блок который занимает всю строку за счёт генерации левых и правых отступов  
display: inline; //элемент занимает столько же пространства что и внутрений / нельзя создовать вертикальные отступы
display: inline-block; //совмещает свойства inline и block



//ГРИД-КОНТЕЙНЕР

//НЕОБХОДИМО
display: grid; //свойство display со значение grid создаёт грид-контейнер
grid-template: 1 ... / 1 ...; //создаёт сетку / краткая форма grid-template-columns и grid-template-rows
grid-template: repeat(1, 1); //функция repeat() упращает создание столбцов, где первый элемент количевство, а второй размер
grid-template: 1fr; //fr создат дробную единицу измерения
grid-area: 1 / 1 / 1 / 1; //выбор элемента / краткая форма grid-column и grid-row
order: 1; //задаёт порядок для элемента, изначально все элементы равны 0

//МОЖНО ИСПОЛЬЗОВАТЬ
grid-template-columns: 1; //задаёт сетку по горизонтали  
grid-template-rows: 1; //задайта сетку по вертикали
grid-column: 1 / 1; //выбор элемента по горизонтали / краткая форма grid-column-start и grid-column-end
grid-row: 1 / 1; //выбор элемента по вертикали / краткая форма grid-row-start и grid-column-end
grid-row: span 1; //span задаёт значение в зависимости от значения противоположного свойства, не может быть отрицательным

//БРЕД
grid-column-start: 1; //выбор начала элемента по горизонтали
grid-column-end: 1; //выбор конца элемента по горизонтали
grid-row-start: 1; //выбор начала элемента по вертикали
grid-row-end: 1; //выбор конца элемента по вертикали



//ФЛЕКС-КОНТЕЙНЕР

display: flex; // свойство display со значением flex создаёт флекс-контейнер
justify-content: значение; //выравнивает расстояние между элементами горизонтально
                 flex-start; //элементы выравниваются по левой стороне
                 flex-end; //элементы выравниваются по правой стороне
                 center; //элементы выравниваются по центру контейнера
                 space-between; //элементы отображаются с одинаковыми отступами между ними
                 space-around; //элементы отображаются с одинаковыми отступами вокруг них
                 stretch; //элементы растягиваются, чтобы заполнить контейнер
align-content: значение; //выравнивает расстояние между элементами вертикально
               flex-start; //ряды группируются в верхней части контейнера
               flex-end; //ряды группируются в нижней части контейнера
               center; //ряды группируются вертикально по центру контейнера
               space-between; //ряды отображаются с одинаковыми расстояниями между ними
               space-around; //ряды отображаются с одинаковыми расстояниями вокруг них
               stretch; // ряды растягиваются, чтобы заполнить контейнер равномерно
align-items: значение; //выравнивает вертикально
 align-self: значение; //выравнивает вертикально определённый элемент
             flex-start; //элементы выравниваются по верхнему краю 
             flex-end; //элементы выравниваются по нижнему краю 
             center; //элементы выравниваются вертикально по центру 
             baseline; //элементы отображаются на базовой линии
             stretch; //элементы растягиваются, чтобы заполнить контейнер
flex-flow: значение; // объеденяет свойства flex-direction и flex-wrap               
flex-direction: значение; //задаёт направление элементов
                row; //элементы размещаются в обычном порядке
                row-reverse; //элементы отображаются в обратном порядке
                column: элемент; //элементы располагаются сверху вниз
                column-reverse; //элементы располагаются снизу вверх
flex-wrap: значение; //переносит элементы
           nowrap; //размеры элементов устанавливаются автоматически, чтобы они поместились в один ряд
           wrap; //элементы автоматически переносятся на новую строку
           wrap-reverse; //элементы автоматически переносятся на новую строку, но строки расположены в обратном порядке
order: 1; //задаёт порядок для элемента, изначально все элементы равны 0
flex-shrink: 1; //задаёт насколько элемент будет сжимать по сравнению с другими элементами при уменьшения места
flex-grow: 1; //задаёт насколько элемент может увеличится по сравнению с другими элементами при наличие свободного места
*/

